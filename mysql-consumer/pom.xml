<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>mysql-consumer</artifactId>
    <packaging>jar</packaging>
    <parent>
        <groupId>com.cbs</groupId>
        <artifactId>app</artifactId>
        <!--需要指定父项目的版本-->
        <version>0.0.1-RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <dependencies>
        <!--dubbo-->
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>0.2.0</version>
        </dependency>
        <!--通用接口-->
        <dependency>
            <groupId>com.cbs</groupId>
            <artifactId>mysql-common</artifactId>
            <!--本POM的groupId和version可以省略，这样只要保证子模块的版本号都一致就不会有问题-->
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**.*</include>
                    <include>**/*.*</include><!-- i18n能读取到 -->
                    <include>**/*/*.*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--启动类-->
                    <mainClass>com.cbs.app.App</mainClass>
                    <!-- 如果没有该配置，devtools不会生效 -->
                    <!--<fork>true</fork>-->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!--可以把依赖的包都打包到生成的Jar包中-->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
